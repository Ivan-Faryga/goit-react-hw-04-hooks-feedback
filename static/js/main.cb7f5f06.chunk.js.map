{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","type","name","onClick","className","s","btn","proptypes","PropTypes","string","isRequired","func","Section","title","children","section","Notification","message","note","Statistics","good","neutral","bad","total","percentage","list","item","positive","middle","negative","sum","percents","App","useState","setGood","setNeutral","setBad","countTotalFeedbackAmount","e","target","prev","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb7f5f06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__xDPW2\",\"item\":\"Statistics_item__4pfoy\",\"positive\":\"Statistics_positive__3oCUd\",\"middle\":\"Statistics_middle__2aukJ\",\"negative\":\"Statistics_negative__ZT6tg\",\"sum\":\"Statistics_sum__1_Aqt\",\"percents\":\"Statistics_percents__3cBVy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3ZV8b\",\"title\":\"Section_title__1pHmQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__jq3A4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Notification_note__3OpTP\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return Object.keys(options).map((option) => (\r\n    <button\r\n      key={option}\r\n      type=\"button\"\r\n      name={option}\r\n      onClick={onLeaveFeedback}\r\n      className={s.btn}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n};\r\n\r\nFeedbackOptions.proptypes = {\r\n  option: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={s.note}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percentage }) => (\r\n  <div>\r\n    {total > 0 ? (\r\n      <ul className={s.list}>\r\n        <li className={s.item}>\r\n          <span className={s.positive}>Good: {good}</span>\r\n        </li>\r\n        <li className={s.item}>\r\n          <span className={s.middle}>Neutral: {neutral}</span>\r\n        </li>\r\n        <li className={s.item}>\r\n          <span className={s.negative}>Bad: {bad}</span>\r\n        </li>\r\n        <li className={s.item}>\r\n          <span className={s.sum}>Total: {total}</span>\r\n        </li>\r\n        <li className={s.item}>\r\n          <span className={s.percents}>Positive feedback: {percentage} %</span>\r\n        </li>\r\n      </ul>\r\n    ) : (\r\n      <Notification message={\"No feedback given\"} />\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n","import { useState } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClick = (e) => {\n    switch (e.target.name) {\n      case \"good\":\n        setGood((prev) => prev + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prev) => prev + 1);\n        break;\n      case \"bad\":\n        setBad((prev) => prev + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedbackAmount = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    if (!good) {\n      return 0;\n    }\n    return Math.round((good / countTotalFeedbackAmount()) * 100);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <FeedbackOptions\n        options={{ good, neutral, bad }}\n        onLeaveFeedback={handleClick}\n      />\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedbackAmount()}\n          percentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}